library(dplyr)
library(imager)
##Compute Voronoi diagram of point set xy with width w and height h.
voronoi <- function(xy,w,h)
{
v <- imfill(w,h)
ind <- round(xy) %>% index.coord(v,.)
v[ind] <- seq_along(ind)
d <- distance_transform(v>0,1)
watershed(v,-d,fill_lines=FALSE)
}
##Compute Voronoi diagram of point set xy, and return center of mass of each cell (with density given by image dens)
cvt <- function(xy,dens)
{
voronoi(xy,width(dens),height(dens)) %>% as.data.frame %>%
mutate(vim=c(dens)) %>%
group_by(value) %>%
dplyr::summarise(x=weighted.mean(x,w=vim),y=weighted.mean(y,w=vim)) %>%
select(x,y) %>%
filter(x %inr% c(1,width(dens)),y %inr% c(1,height(dens)))
}
##Initializing sample Points for a given Image and loops the cvt calculations.
##nDots: Amount of Sample Points, gamma: Density of Input Values can be changed, nSteps: Number of Voronoi Steps
stipple <- function(im,nDots=1e3,gamma=1,nSteps=5)
{
dens <- (1-im)^gamma
xy <- sample(nPix(im),nDots,replace=TRUE,prob=dens) %>% coord.index(im,.) %>% select(x,y)
for (i in 2:nSteps)
{
xy <- cvt(xy,dens)
}
xy
}
##Load Image and safe it grayscaled
im <- load.image("Input/Gecko.png")
im <- grayscale(im)
##Stippling Algorithm with the use of weighted centroid coronoi diagrams
out <- stipple(im,nDots=10000,gamma=2,nSteps=5)
##Save image as pdf
pdf("Output/Gecko.pdf")
plot(im,ylim=c(height(im),1),main=paste("Gecko Graubild"), xlim=c(1, width(im)), cex=.1,pch=19,axes=FALSE,xlab="",ylab="")
##Stippling Algorithm with the use of weighted centroid coronoi diagrams
out <- stipple(im,nDots=10000,gamma=2,nSteps=0)
plot(out,ylim=c(height(im),1),main=paste("Gecko mit 10000 Punkten und 0 Voronoi Durchläufen"), xlim=c(1, width(im)), cex=.1,pch=19,axes=FALSE,xlab="",ylab="")
##Stippling Algorithm with the use of weighted centroid coronoi diagrams
out <- stipple(im,nDots=10000,gamma=2,nSteps=1)
plot(out,ylim=c(height(im),1),main=paste("Gecko mit 10000 Punkten und 1 Voronoi Durchlauf"), xlim=c(1, width(im)), cex=.1,pch=19,axes=FALSE,xlab="",ylab="")
##Stippling Algorithm with the use of weighted centroid coronoi diagrams
out <- stipple(im,nDots=10000,gamma=2,nSteps=2)
plot(out,ylim=c(height(im),1),main=paste("Gecko mit 10000 Punkten und 2 Voronoi Durchläufen"), xlim=c(1, width(im)), cex=.1,pch=19,axes=FALSE,xlab="",ylab="")
##Stippling Algorithm with the use of weighted centroid coronoi diagrams
out <- stipple(im,nDots=10000,gamma=2,nSteps=3)
plot(out,ylim=c(height(im),1),main=paste("Gecko mit 10000 Punkten und 3 Voronoi Durchläufen"), xlim=c(1, width(im)), cex=.1,pch=19,axes=FALSE,xlab="",ylab="")
##Stippling Algorithm with the use of weighted centroid coronoi diagrams
out <- stipple(im,nDots=10000,gamma=2,nSteps=4)
plot(out,ylim=c(height(im),1),main=paste("Gecko mit 10000 Punkten und 4 Voronoi Durchläufen"), xlim=c(1, width(im)), cex=.1,pch=19,axes=FALSE,xlab="",ylab="")
dev.off()
##Load Image and safe it grayscaled
im <- load.image("Input/Gecko.png")
im <- grayscale(im)
##Save image as pdf
pdf("Output/Gecko_Test.pdf")
plot(im,ylim=c(height(im),1),main=paste("Gecko Graubild"), xlim=c(1, width(im)), cex=.1,pch=19,axes=FALSE,xlab="",ylab="")
out <- stipple(im,nDots=10000,gamma=2,nSteps=0)
plot(out,ylim=c(height(im),1),main=paste("Gecko mit 10000 Punkten und 0 Voronoi Durchläufen"), xlim=c(1, width(im)), cex=.1,pch=19,axes=FALSE,xlab="",ylab="")
out <- stipple(im,nDots=10000,gamma=2,nSteps=1)
plot(out,ylim=c(height(im),1),main=paste("Gecko mit 10000 Punkten und 1 Voronoi Durchlauf"), xlim=c(1, width(im)), cex=.1,pch=19,axes=FALSE,xlab="",ylab="")
out <- stipple(im,nDots=10000,gamma=2,nSteps=2)
plot(out,ylim=c(height(im),1),main=paste("Gecko mit 10000 Punkten und 2 Voronoi Durchläufen"), xlim=c(1, width(im)), cex=.1,pch=19,axes=FALSE,xlab="",ylab="")
dev.off()
##Initializing sample Points for a given Image and loops the cvt calculations.
##nDots: Amount of Sample Points, gamma: Density of Input Values can be changed, nSteps: Number of Voronoi Steps
stipple <- function(im,nDots=1e3,gamma=1,nSteps=5)
{
dens <- (1-im)^gamma
xy <- sample(nPix(im),nDots,replace=TRUE,prob=dens) %>% coord.index(im,.) %>% select(x,y)
for (i in 0:nSteps)
{
xy <- cvt(xy,dens)
}
xy
}
##Load Image and safe it grayscaled
im <- load.image("Input/Gecko.png")
im <- grayscale(im)
##Stippling Algorithm with the use of weighted centroid coronoi diagrams
out <- stipple(im,nDots=10000,gamma=2,nSteps=0)
##Save image as pdf
pdf("Output/Gecko_Test.pdf")
plot(im,ylim=c(height(im),1),main=paste("Gecko Graubild"), xlim=c(1, width(im)), cex=.1,pch=19,axes=FALSE,xlab="",ylab="")
out <- stipple(im,nDots=10000,gamma=2,nSteps=0)
plot(out,ylim=c(height(im),1),main=paste("Gecko mit 10000 Punkten und 0 Voronoi Durchläufen"), xlim=c(1, width(im)), cex=.1,pch=19,axes=FALSE,xlab="",ylab="")
out <- stipple(im,nDots=10000,gamma=2,nSteps=1)
plot(out,ylim=c(height(im),1),main=paste("Gecko mit 10000 Punkten und 1 Voronoi Durchlauf"), xlim=c(1, width(im)), cex=.1,pch=19,axes=FALSE,xlab="",ylab="")
out <- stipple(im,nDots=10000,gamma=2,nSteps=2)
plot(out,ylim=c(height(im),1),main=paste("Gecko mit 10000 Punkten und 2 Voronoi Durchläufen"), xlim=c(1, width(im)), cex=.1,pch=19,axes=FALSE,xlab="",ylab="")
##Initializing sample Points for a given Image and loops the cvt calculations.
##nDots: Amount of Sample Points, gamma: Density of Input Values can be changed, nSteps: Number of Voronoi Steps
stipple <- function(im,nDots=1e3,gamma=1,nSteps=5)
{
dens <- (1-im)^gamma
xy <- sample(nPix(im),nDots,replace=TRUE,prob=dens) %>% coord.index(im,.) %>% select(x,y)
for (i in 0:nSteps)
{
xy <- cvt(xy,dens)
}
xy
}
##Save image as pdf
pdf("Output/Gecko_Test_01.pdf")
plot(im,ylim=c(height(im),1),main=paste("Gecko Graubild"), xlim=c(1, width(im)), cex=.1,pch=19,axes=FALSE,xlab="",ylab="")
out <- stipple(im,nDots=10000,gamma=2,nSteps=0)
plot(out,ylim=c(height(im),1),main=paste("Gecko mit 10000 Punkten und 0 Voronoi Durchläufen"), xlim=c(1, width(im)), cex=.1,pch=19,axes=FALSE,xlab="",ylab="")
out <- stipple(im,nDots=10000,gamma=2,nSteps=1)
plot(out,ylim=c(height(im),1),main=paste("Gecko mit 10000 Punkten und 1 Voronoi Durchlauf"), xlim=c(1, width(im)), cex=.1,pch=19,axes=FALSE,xlab="",ylab="")
out <- stipple(im,nDots=10000,gamma=2,nSteps=2)
plot(out,ylim=c(height(im),1),main=paste("Gecko mit 10000 Punkten und 2 Voronoi Durchläufen"), xlim=c(1, width(im)), cex=.1,pch=19,axes=FALSE,xlab="",ylab="")
dev.off()
x = "Hallo Welt"
x + "Hi"
x = "Hallo Welt" + "Hi"
x = cat("Hallo Welt", "Hi")
x
x = paste("Hallo Welt", "Hi")
x
x = paste("Hallo Welt", 1)
x
##Load Image and safe it grayscaled
im <- load.image("Input/Gecko.png")
im <- grayscale(im)
##Stippling Algorithm with the use of weighted centroid coronoi diagrams
out <- stipple(im,nDots=10000,gamma=2,nSteps=0)
##Initializing sample Points for a given Image and loops the cvt calculations.
##nDots: Amount of Sample Points, gamma: Density of Input Values can be changed, nSteps: Number of Voronoi Steps
stipple <- function(im,nDots=1e3,gamma=1,nSteps=5)
{
dens <- (1-im)^gamma
xy <- sample(nPix(im),nDots,replace=TRUE,prob=dens) %>% coord.index(im,.) %>% select(x,y)
pdf("Output/Gecko_Test_02.pdf")
plot(im,ylim=c(height(im),1),main=paste("Gecko Graubild"), xlim=c(1, width(im)), cex=.1,pch=19,axes=FALSE,xlab="",ylab="")
if (test_expression) {
statement
}
for (i in 0:nSteps)
{
xy <- cvt(xy,dens)
if (i == 1){
plot(xy,ylim=c(height(im),1),main=paste("Gecko mit ",nDots, " Punkten und ", nSteps, " Voronoi Durchlauf"), xlim=c(1, width(im)), cex=.1,pch=19,axes=FALSE,xlab="",ylab="")
}
if (i!=1){
plot(xy,ylim=c(height(im),1),main=paste("Gecko mit ",nDots, " Punkten und ", nSteps, " Voronoi Durchläufen"), xlim=c(1, width(im)), cex=.1,pch=19,axes=FALSE,xlab="",ylab="")
}
}
xy
}
##Load Image and safe it grayscaled
im <- load.image("Input/Gecko.png")
im <- grayscale(im)
##Stippling Algorithm with the use of weighted centroid coronoi diagrams
out <- stipple(im,nDots=10000,gamma=2,nSteps=0)
##Initializing sample Points for a given Image and loops the cvt calculations.
##nDots: Amount of Sample Points, gamma: Density of Input Values can be changed, nSteps: Number of Voronoi Steps
stipple <- function(im,nDots=1e3,gamma=1,nSteps=5)
{
dens <- (1-im)^gamma
xy <- sample(nPix(im),nDots,replace=TRUE,prob=dens) %>% coord.index(im,.) %>% select(x,y)
pdf("Output/Gecko_Test_02.pdf")
plot(im,ylim=c(height(im),1),main=paste("Gecko Graubild"), xlim=c(1, width(im)), cex=.1,pch=19,axes=FALSE,xlab="",ylab="")
for (i in 0:nSteps)
{
xy <- cvt(xy,dens)
if (i == 1){
plot(xy,ylim=c(height(im),1),main=paste("Gecko mit ",nDots, " Punkten und ", nSteps, " Voronoi Durchlauf"), xlim=c(1, width(im)), cex=.1,pch=19,axes=FALSE,xlab="",ylab="")
}
if (i!=1){
plot(xy,ylim=c(height(im),1),main=paste("Gecko mit ",nDots, " Punkten und ", nSteps, " Voronoi Durchläufen"), xlim=c(1, width(im)), cex=.1,pch=19,axes=FALSE,xlab="",ylab="")
}
}
xy
}
##Load Image and safe it grayscaled
im <- load.image("Input/Gecko.png")
im <- grayscale(im)
##Stippling Algorithm with the use of weighted centroid coronoi diagrams
out <- stipple(im,nDots=10000,gamma=2,nSteps=0)
##Initializing sample Points for a given Image and loops the cvt calculations.
##nDots: Amount of Sample Points, gamma: Density of Input Values can be changed, nSteps: Number of Voronoi Steps
stipple <- function(im,nDots=1e3,gamma=1,nSteps=5)
{
dens <- (1-im)^gamma
xy <- sample(nPix(im),nDots,replace=TRUE,prob=dens) %>% coord.index(im,.) %>% select(x,y)
pdf("Output/Gecko_Test_03.pdf")
plot(im,ylim=c(height(im),1),main=paste("Gecko Graubild"), xlim=c(1, width(im)), cex=.1,pch=19,axes=FALSE,xlab="",ylab="")
for (i in 0:nSteps)
{
xy <- cvt(xy,dens)
if (i == 1){
plot(xy,ylim=c(height(im),1),main=paste("Gecko mit ",nDots, " Punkten und ", nSteps, " Voronoi Durchlauf"), xlim=c(1, width(im)), cex=.1,pch=19,axes=FALSE,xlab="",ylab="")
}
if (i!=1){
plot(xy,ylim=c(height(im),1),main=paste("Gecko mit ",nDots, " Punkten und ", nSteps, " Voronoi Durchläufen"), xlim=c(1, width(im)), cex=.1,pch=19,axes=FALSE,xlab="",ylab="")
}
}
dev.off()
xy
}
##Load Image and safe it grayscaled
im <- load.image("Input/Gecko.png")
im <- grayscale(im)
##Stippling Algorithm with the use of weighted centroid coronoi diagrams
out <- stipple(im,nDots=10000,gamma=2,nSteps=0)
##Load Image and safe it grayscaled
im <- load.image("Input/Gecko.png")
im <- grayscale(im)
##Stippling Algorithm with the use of weighted centroid coronoi diagrams
out <- stipple(im,nDots=10000,gamma=2,nSteps=2)
##Stippling Algorithm with the use of weighted centroid coronoi diagrams
out <- stipple(im,nDots=10000,gamma=2,nSteps=2)
##Initializing sample Points for a given Image and loops the cvt calculations.
##nDots: Amount of Sample Points, gamma: Density of Input Values can be changed, nSteps: Number of Voronoi Steps
stipple <- function(im,nDots=1e3,gamma=1,nSteps=5)
{
dens <- (1-im)^gamma
xy <- sample(nPix(im),nDots,replace=TRUE,prob=dens) %>% coord.index(im,.) %>% select(x,y)
pdf("Output/Gecko_Test_03.pdf")
plot(im,ylim=c(height(im),1),main=paste("Gecko Graubild"), xlim=c(1, width(im)), cex=.1,pch=19,axes=FALSE,xlab="",ylab="")
plot(xy,ylim=c(height(im),1),main=paste("Gecko mit ",nDots, " Punkten und 0 Voronoi Durchläufen"), xlim=c(1, width(im)), cex=.1,pch=19,axes=FALSE,xlab="",ylab="")
for (i in 1:nSteps)
{
xy <- cvt(xy,dens)
if (i == 1){
plot(xy,ylim=c(height(im),1),main=paste("Gecko mit ",nDots, " Punkten und ", i, " Voronoi Durchlauf"), xlim=c(1, width(im)), cex=.1,pch=19,axes=FALSE,xlab="",ylab="")
}
if (i!=1){
plot(xy,ylim=c(height(im),1),main=paste("Gecko mit ",nDots, " Punkten und ", i, " Voronoi Durchläufen"), xlim=c(1, width(im)), cex=.1,pch=19,axes=FALSE,xlab="",ylab="")
}
}
dev.off()
xy
}
##Load Image and safe it grayscaled
im <- load.image("Input/Gecko.png")
im <- grayscale(im)
##Stippling Algorithm with the use of weighted centroid coronoi diagrams
out <- stipple(im,nDots=10000,gamma=2,nSteps=2)
##Initializing sample Points for a given Image and loops the cvt calculations.
##nDots: Amount of Sample Points, gamma: Density of Input Values can be changed, nSteps: Number of Voronoi Steps
stipple <- function(im,nDots=1e3,gamma=1,nSteps=5)
{
dens <- (1-im)^gamma
xy <- sample(nPix(im),nDots,replace=TRUE,prob=dens) %>% coord.index(im,.) %>% select(x,y)
pdf("Output/Gecko_Test_03.pdf")
plot(im,ylim=c(height(im),1),main=paste("Erdbeere Graubild"), xlim=c(1, width(im)), cex=.1,pch=19,axes=FALSE,xlab="",ylab="")
plot(xy,ylim=c(height(im),1),main=paste("Erdbeere mit ",nDots, " Punkten und 0 Voronoi Durchläufen"), xlim=c(1, width(im)), cex=.1,pch=19,axes=FALSE,xlab="",ylab="")
for (i in 1:nSteps)
{
xy <- cvt(xy,dens)
if (i == 1){
plot(xy,ylim=c(height(im),1),main=paste("Erdbeere mit ",nDots, " Punkten und ", i, " Voronoi Durchlauf"), xlim=c(1, width(im)), cex=.1,pch=19,axes=FALSE,xlab="",ylab="")
}
if (i!=1){
plot(xy,ylim=c(height(im),1),main=paste("Erdbeere mit ",nDots, " Punkten und ", i, " Voronoi Durchläufen"), xlim=c(1, width(im)), cex=.1,pch=19,axes=FALSE,xlab="",ylab="")
}
}
dev.off()
xy
}
##Initializing sample Points for a given Image and loops the cvt calculations.
##nDots: Amount of Sample Points, gamma: Density of Input Values can be changed, nSteps: Number of Voronoi Steps
stipple <- function(im,nDots=1e3,gamma=1,nSteps=5)
{
dens <- (1-im)^gamma
xy <- sample(nPix(im),nDots,replace=TRUE,prob=dens) %>% coord.index(im,.) %>% select(x,y)
pdf("Output/Erdbeere_Test.pdf")
plot(im,ylim=c(height(im),1),main=paste("Erdbeere Graubild"), xlim=c(1, width(im)), cex=.1,pch=19,axes=FALSE,xlab="",ylab="")
plot(xy,ylim=c(height(im),1),main=paste("Erdbeere mit ",nDots, " Punkten und 0 Voronoi Durchläufen"), xlim=c(1, width(im)), cex=.1,pch=19,axes=FALSE,xlab="",ylab="")
for (i in 1:nSteps)
{
xy <- cvt(xy,dens)
if (i == 1){
plot(xy,ylim=c(height(im),1),main=paste("Erdbeere mit ",nDots, " Punkten und ", i, " Voronoi Durchlauf"), xlim=c(1, width(im)), cex=.1,pch=19,axes=FALSE,xlab="",ylab="")
}
if (i!=1){
plot(xy,ylim=c(height(im),1),main=paste("Erdbeere mit ",nDots, " Punkten und ", i, " Voronoi Durchläufen"), xlim=c(1, width(im)), cex=.1,pch=19,axes=FALSE,xlab="",ylab="")
}
}
dev.off()
xy
}
##Load Image and safe it grayscaled
im <- load.image("Input/Erdbeere.jpg")
im <- grayscale(im)
##Stippling Algorithm with the use of weighted centroid coronoi diagrams
out <- stipple(im,nDots=10000,gamma=2,nSteps=2)
##Load Image and safe it grayscaled
im <- load.image("Input/Erdbeere.jpg")
im <- grayscale(im)
##Stippling Algorithm with the use of weighted centroid coronoi diagrams
out <- stipple(im,nDots=50000,gamma=2,nSteps=2)
##Initializing sample Points for a given Image and loops the cvt calculations.
##nDots: Amount of Sample Points, gamma: Density of Input Values can be changed, nSteps: Number of Voronoi Steps
stipple <- function(im,nDots=1e3,gamma=1,nSteps=5)
{
dens <- (1-im)^gamma
xy <- sample(nPix(im),nDots,replace=TRUE,prob=dens) %>% coord.index(im,.) %>% select(x,y)
pdf("Output/Zebra_Test.pdf")
plot(im,ylim=c(height(im),1),main=paste("Zebra Graubild"), xlim=c(1, width(im)), cex=.1,pch=19,axes=FALSE,xlab="",ylab="")
plot(xy,ylim=c(height(im),1),main=paste("Zebra mit ",nDots, " Punkten und 0 Voronoi Durchläufen"), xlim=c(1, width(im)), cex=.1,pch=19,axes=FALSE,xlab="",ylab="")
for (i in 1:nSteps)
{
xy <- cvt(xy,dens)
if (i == 1){
plot(xy,ylim=c(height(im),1),main=paste("Zebra mit ",nDots, " Punkten und ", i, " Voronoi Durchlauf"), xlim=c(1, width(im)), cex=.1,pch=19,axes=FALSE,xlab="",ylab="")
}
if (i!=1){
plot(xy,ylim=c(height(im),1),main=paste("Zebra mit ",nDots, " Punkten und ", i, " Voronoi Durchläufen"), xlim=c(1, width(im)), cex=.1,pch=19,axes=FALSE,xlab="",ylab="")
}
}
dev.off()
xy
}
##Load Image and safe it grayscaled
im <- load.image("Input/Zebra.jpg")
im <- grayscale(im)
##Stippling Algorithm with the use of weighted centroid coronoi diagrams
out <- stipple(im,nDots=50000,gamma=2,nSteps=2)
